{"version":3,"sources":["scripts/main.js"],"names":["listOfEmployees","document","querySelector","getEmployees","employees","children","employee","push","sortList","getSalary","dataset","salary","replace","sortedEmployees","sort","employeeA","employeeB","innerHTML","map","position","age","innerText","join"],"mappings":";AAAA,aAkCA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAhCA,IAAMA,EAAkBC,SAASC,cAAc,MAE/C,SAASC,EAAaH,GACdI,IAD+B,EAC/BA,EAAY,GAEKJ,EAAAA,EAAAA,EAAgBK,UAHF,IAGY,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAtCC,IAAAA,EAAsC,EAAA,MAC/CF,EAAUG,KAAKD,IAJoB,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAO9BF,OAAAA,EAGT,SAASI,EAASR,GACVS,IAAAA,EAAY,SAACH,GAAa,OAACA,EAASI,QAAQC,OAAOC,QAAQ,QAAS,KAEpEC,EAAkBV,EAAaH,GAAiBc,KACpD,SAACC,EAAWC,GAAcP,OAAAA,EAAUO,GAAaP,EAAUM,KAG7Df,EAAgBiB,UACZJ,SAAAA,OAAAA,EAAgBK,IAAI,SAAAZ,GAEDA,MAAAA,uCAAAA,OAAAA,EAASI,QAAQS,SACnBb,4BAAAA,OAAAA,EAASI,QAAQC,OACpBL,yBAAAA,OAAAA,EAASI,QAAQU,IAE3Bd,wBAAAA,OAAAA,EAASe,UANe,yBAQ3BC,KAAK,IATV,QAaFd,EAASR","file":"main.cd5d5777.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst listOfEmployees = document.querySelector('ul');\n\nfunction getEmployees(listOfEmployees) {\n  const employees = [];\n\n  for (const employee of listOfEmployees.children) {\n    employees.push(employee);\n  }\n\n  return employees;\n}\n\nfunction sortList(listOfEmployees) {\n  const getSalary = (employee) => +employee.dataset.salary.replace(/[$,]/g, '');\n\n  const sortedEmployees = getEmployees(listOfEmployees).sort(\n    (employeeA, employeeB) => getSalary(employeeB) - getSalary(employeeA)\n  );\n\n  listOfEmployees.innerHTML = `\n    ${sortedEmployees.map(employee => `\n      <li\n        data-position=\"${employee.dataset.position}\"\n        data-salary=\"${employee.dataset.salary}\"\n        data-age=\"${employee.dataset.age}\"\n      >\n        ${employee.innerText}\n      </li>\n    `).join('')}\n  `;\n}\n\nsortList(listOfEmployees);\n"]}